buildscript {
	ext {
		springBootVersion = '1.4.1.RELEASE'
		 dockerPluginVersion = '1.2'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("se.transmode.gradle:gradle-docker:${dockerPluginVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'spring-boot'
apply from: 'docker.gradle'

jar {
	baseName = 'nbp-cloud'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

//applicationDefaultJvmArgs=["-Xms128m","-Xmx256m"]

bootRun {
    jvmArgs = ["-Xdebug", "-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=10021","-Xms16m","-Xmx64m"]
    jvmArgs = ["-Dspring.profiles.active=dev"]
    //jvmArgs = ['-Dserver.port=9001']
    addResources = true
    if ( project.hasProperty('jvmArgs') ) {
        jvmArgs project.jvmArgs.split('\\s+')
    }
    
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.apache.camel:camel-spring-boot-starter:2.18.0')
	compile('org.springframework.boot:spring-boot-devtools')
        compile 'org.springframework.boot:spring-boot-starter-data-jpa'
        compile 'org.springframework.boot:spring-boot-starter-logging'
    compile("org.crashub:crash.connectors.telnet:1.3.1")
    compile group: 'com.h2database', name: 'h2', version: '1.4.192'
    compile group: 'org.apache.camel', name: 'camel-stream', version: '2.18.0'
    compile group: 'org.apache.camel', name: 'camel-http', version: '2.18.0'
    compile group: 'org.apache.camel', name: 'camel-cxf', version: '2.18.0'
    compile group: 'org.apache.camel', name: 'camel-jaxb', version: '2.18.0'
    compile group: 'com.google.guava', name: 'guava', version: '19.0'
    compile group: 'com.github.javafaker', name: 'javafaker', version: '0.10'
    compile group: 'org.jolokia', name: 'jolokia-core', version: '1.3.4'
    compile group: 'org.apache.camel', name: 'camel-bindy', version: '2.18.0'   
    compile group: 'org.apache.camel', name: 'camel-csv', version: '2.18.0'
    compile('org.projectlombok:lombok')
    compile('org.springframework.boot:spring-boot-starter-web')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

gradle.taskGraph.afterTask { task ->
    task.outputs.files.each{ it ->
        println it
    }
}
